(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{416:function(t,e,s){"use strict";s.r(e);var a=s(54),v=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("今天我们来介绍三个常用的命令：telnet、nc 和 netstat")]),t._v(" "),s("h2",{attrs:{id:"命令一-telnet"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#命令一-telnet"}},[t._v("#")]),t._v(" 命令一：telnet")]),t._v(" "),s("p",[t._v("现在 telnet server 几乎没有人在用了，但是 telnet client 却被广泛的使用着。它的功能已经比较强大，有较多巧妙的用法。下面选取几个用的比较多的来介绍一下。")]),t._v(" "),s("h3",{attrs:{id:"_0x01-检查端口是否打开"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_0x01-检查端口是否打开"}},[t._v("#")]),t._v(" 0x01 检查端口是否打开")]),t._v(" "),s("p",[t._v("telnet 的一个最大作用就是检查一个端口是否处于打开，使用的命令是 "),s("code",[t._v("telnet [domainname or ip] [port]")]),t._v("，这条命令能告诉我们到远端 server 指定端口的网连接是否可达。")]),t._v(" "),s("blockquote",[s("p",[t._v("telnet [domainname or ip] [port]")])]),t._v(" "),s("p",[t._v("telnet 第一个参数是要连接的域名或者 ip，第二个参数是要连接的端口。")]),t._v(" "),s("p",[t._v("比如你要连接 220.181.57.216（百度) 服务器上的 80 端口，可以使用如下的命令："),s("code",[t._v("telnet 220.181.57.216 80")])]),t._v(" "),s("p",[t._v("如果这个网络连接可达，则会提示你"),s("code",[t._v("Connected to 220.181.57.216")]),t._v("，输入"),s("code",[t._v("control ]")]),t._v("可以给这个端口发送数据包了")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/5/29/16b04184c7883850",alt:"-w349"}})]),t._v(" "),s("p",[t._v("如果网路不可达，则会提示"),s("code",[t._v("telnet: Unable to connect to remote host")]),t._v("和具体不能连上的原因，常见的有 Operation timed out、Connection refused。")]),t._v(" "),s("p",[t._v("比如我本机没有进程监听 90 端口，"),s("code",[t._v("telnet 127.0.0.1 90")]),t._v("的信息如下")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/5/29/16b04184cf017730",alt:"-w549"}})]),t._v(" "),s("h3",{attrs:{id:"_0x02-telnet-还能发-http-请求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_0x02-telnet-还能发-http-请求"}},[t._v("#")]),t._v(" 0x02 telnet 还能发 http 请求？")]),t._v(" "),s("p",[t._v("我们知道 curl 可以方便的发送 http 请求，telnet 也是可以方便的发送 http 请求的")]),t._v(" "),s("p",[t._v("执行 "),s("code",[t._v("telnet www.baidu.com 80")]),t._v("，粘贴下面的文本（注意总共有四行，最后两行为两个空行）")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("GET / HTTP/1.1\nHost: www.baidu.com\n")])])]),s("p",[t._v("​"),s("br"),t._v("\n​")]),t._v(" "),s("p",[t._v("可以看到返回了百度的首页")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("➜ telnet www.baidu.com 80\nTrying 14.215.177.38...\nConnected to www.a.shifen.com.\nEscape character is '^]'.\nGET / HTTP/1.1\nHost: www.baidu.com\n\nHTTP/1.1 200 OK\nAccept-Ranges: bytes\nCache-Control: no-cache\nConnection: Keep-Alive\nContent-Length: 14615\n...\n")])])]),s("h3",{attrs:{id:"_0x03-telnet-还可以连接-redis"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_0x03-telnet-还可以连接-redis"}},[t._v("#")]),t._v(" 0x03 telnet 还可以连接 Redis")]),t._v(" "),s("p",[t._v("假设 redis 服务器跑在本地，监听 6379端口，用 "),s("code",[t._v("telnet 6379")]),t._v(" 命令可以连接上。接下来就可以调用 redis 的命令。")]),t._v(" "),s("p",[t._v('调用"set hello world"，给 key 为 hello 设置值为 "world"，随后调用 get hello 获取值')]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/5/29/16b04184ccd3d71d?imageslim",alt:"render1548074308853"}})]),t._v(" "),s("p",[t._v("Redis 客户端和 Redis 服务器使用 RESP 协议通信，RESP 是 REdis Serialization Protocol 的简称。在 RESP 中，通过检查服务器返回数据的第一个字节来确定这个回复是什么类型：")]),t._v(" "),s("ul",[s("li",[t._v('对于 Simple Strings 来说，第一个字节是 "+"')]),t._v(" "),s("li",[t._v('对于 Errors 来说，第一个字节是 "-"')]),t._v(" "),s("li",[t._v('对于 Integers 来说，第一个字节是 ":"')]),t._v(" "),s("li",[t._v('对于 Bulk Strings 来说，首字节是 "$"')]),t._v(" "),s("li",[t._v('对于 Arrays 来说，首字节是 "*"')])]),t._v(" "),s("blockquote",[s("p",[t._v("RESP Simple Strings")])]),t._v(" "),s("p",[t._v('Simple Strings 被用来传输非二进制安全的字符串，是按下面的方式进行编码: 一个加号，紧接着是不包含 CR 或者 LF 的字符串(不允许换行)，最后以CRLF("\\r\\n")结尾。')]),t._v(" "),s("p",[t._v('执行 "set hello world" 命令成功，服务器会响应一个 "OK"，这是 RESP 一种 Simple Strings 的场景，这种情况下，OK 被编码为五个字节：'),s("code",[t._v("+OK\\r\\n")])]),t._v(" "),s("blockquote",[s("p",[t._v("RESP Bulk Strings")])]),t._v(" "),s("p",[t._v("get 命令读取 hello 的值，redis 服务器返回 "),s("code",[t._v("$5\\r\\nworld\\r\\n")]),t._v("，这种类型属于是 Bulk Strings 被用来表示二进制安全的字符串。")]),t._v(" "),s("p",[t._v('Bulk Strings 的编码方式是下面这种方式：以 "$" 开头，后跟实际要发送的字节数，随后是 CRLF，然后是实际的字符串数据，最后以 CRLF 结束。')]),t._v(" "),s("p",[t._v('所以 "world" 这个 string 会被编码成这样：'),s("code",[t._v("$5\\r\\nworld\\r\\n")])]),t._v(" "),s("h2",{attrs:{id:"命令二-netcat"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#命令二-netcat"}},[t._v("#")]),t._v(" 命令二：netcat")]),t._v(" "),s("p",[t._v("netcat 因为功能强大，被称为网络工具中的瑞士军刀，nc 是 netcat 的简称。这篇文章将介绍 nc 常用的几个场景。")]),t._v(" "),s("h3",{attrs:{id:"_0x01-用-nc-来当聊天服务器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_0x01-用-nc-来当聊天服务器"}},[t._v("#")]),t._v(" 0x01 用 nc 来当聊天服务器")]),t._v(" "),s("p",[t._v("实验步骤")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("在服务器（10.211.55.5）命令行输入 "),s("code",[t._v("nc -l 9090")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/3/7/169580bcb1c2c573",alt:""}})]),t._v(" "),s("p",[t._v("这里的 "),s("code",[t._v("-l")]),t._v(" 参数表示 nc 将监听某个端口，"),s("code",[t._v("l")]),t._v("的含义是 listen。后面紧跟的 9090 表示要监听的端口号为 9090。")])]),t._v(" "),s("li",[s("p",[t._v("在另外客户端机器的终端中输入"),s("code",[t._v("nc 10.211.55.5 9090")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/3/7/169580bcb1d7091c",alt:""}})]),t._v(" "),s("p",[t._v("此时两台机器建立了一条 tcp 连接")])]),t._v(" "),s("li",[s("p",[t._v('在客户端终端中输入 "Hello, this is a message from client"')]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/3/7/169580bcb2645f30",alt:""}})]),t._v(" "),s("p",[t._v("可以看到服务器终端显示出了客户端输入的消息")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/3/7/169580bcb306b7c8",alt:""}})])]),t._v(" "),s("li",[s("p",[t._v('在服务器终端输入 "Hello, this is a message from server"')]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/3/7/169580bcb3f8e380",alt:""}})]),t._v(" "),s("p",[t._v("可以看到客户端终端显示了刚刚服务器端输入的消息")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/3/7/169580bcb44ec564",alt:""}})])])]),t._v(" "),s("p",[t._v('如果不想继续聊下去，在任意一端输入"Ctrl c"都会终止这个连接。')]),t._v(" "),s("p",[t._v("当然，真正在现实场景中用 nc 来聊天用的非常少。"),s("code",[t._v("nc -l")]),t._v("命令一个有价值的地方是可以快速的启动一个 tcp server 监听某个端口。")]),t._v(" "),s("h3",{attrs:{id:"_0x02-发送-http-请求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_0x02-发送-http-请求"}},[t._v("#")]),t._v(" 0x02 发送 http 请求")]),t._v(" "),s("p",[t._v("先访问一次 www.baidu.com 拿到百度服务器的 ip（183.232.231.172）")]),t._v(" "),s("p",[t._v('输入 "nc 183.232.231.172 80"，然后输入enter，')]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("nc 183.232.231.172 80\n<enter>\n<enter>\n")])])]),s("p",[t._v("百度的服务器返回了一个 http 的报文 "),s("code",[t._v("HTTP/1.1 400 Bad Request")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/3/7/169580bcea03aa7e",alt:""}})]),t._v(" "),s("p",[t._v("来回忆一下 HTTP 请求报文的组成：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("起始行（start line）")])]),t._v(" "),s("li",[s("p",[t._v("首部（header）")])]),t._v(" "),s("li",[s("p",[t._v("可选的内容主体（body）")]),t._v(" "),s("p",[t._v("nc 183.232.231.172 80\nGET / HTTP/1.1\nhost: www.baidu.com\n"),s("enter",[s("enter")],1)],1)])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/3/7/169580be833e11cc",alt:""}})]),t._v(" "),s("p",[t._v("除了狂按 enter，你也可以采用 unix 管道的方式，把 HTTP 请求报文传输过去")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v('echo -ne "GET / HTTP/1.1\\r\\nhost:www.baidu.com\\r\\n\\r\\n" | nc 183.232.231.172 80\n')])])]),s("p",[t._v("echo 的 -n 参数很关键，echo 默认会在输出的最后增加一个换行，加上 -n 参数以后就不会在最后自动换行了。")]),t._v(" "),s("p",[t._v("执行上面的命令，可以看到也返回了百度的首页 html")]),t._v(" "),s("h3",{attrs:{id:"_0x03-查看远程端口是否打开"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_0x03-查看远程端口是否打开"}},[t._v("#")]),t._v(" 0x03 查看远程端口是否打开")]),t._v(" "),s("p",[t._v("前面介绍过 telnet 命令也可以检查远程端口是否打开，既然 nc 被称为瑞士军刀，这个小功能不能说不行。")]),t._v(" "),s("blockquote",[s("p",[t._v("nc -zv [host or ip] [port]")])]),t._v(" "),s("p",[t._v("其中 -z 参数表示不发送任何数据包，tcp 三次握手完后自动退出进程。有了 -v 参数则会输出更多详细信息（verbose）。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/3/7/169580bd23a6dcae",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"_0x04-访问-redis"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_0x04-访问-redis"}},[t._v("#")]),t._v(" 0x04 访问 redis")]),t._v(" "),s("p",[t._v("nc 为 在没有 redis-cli 的情况下访问 redis 又新增了一种方法")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("nc localhost 6379\nping\n+PONG\nget hello\n$5\nworld\n")])])]),s("p",[t._v("同样可以把命令通过管道的方式传给 redis 服务器。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("echo ping  | nc localhost 6379\n+PONG\n")])])]),s("h2",{attrs:{id:"命令三-netstat"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#命令三-netstat"}},[t._v("#")]),t._v(" 命令三：netstat")]),t._v(" "),s("p",[t._v("netstat 很强大的网络工具，可以用来显示套接字的状态。下面来介绍一下常用的命令选项")]),t._v(" "),s("h3",{attrs:{id:"列出所有套接字"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#列出所有套接字"}},[t._v("#")]),t._v(" 列出所有套接字")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("netstat -a\n")])])]),s("p",[s("code",[t._v("-a")]),t._v("命令可以输出所有的套接字，包括监听的和未监听的套接字。 示例输出：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/5/29/16b04184cf1da045",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"只列出-tcp-套接字"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#只列出-tcp-套接字"}},[t._v("#")]),t._v(" 只列出 TCP 套接字")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("netstat -at\n")])])]),s("p",[s("code",[t._v("-t")]),t._v(" 选项可以只列出 TCP 的套接字，也可也用"),s("code",[t._v("--tcp")])]),t._v(" "),s("p",[t._v("示例输出")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/5/29/16b04184cf2ce909",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"只列出-udp-连接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#只列出-udp-连接"}},[t._v("#")]),t._v(" 只列出 UDP 连接")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("netstat -au\n")])])]),s("p",[s("code",[t._v("-u")]),t._v(" 选项用来指定显示 UDP 的连接，也可也用"),s("code",[t._v("--udp")]),t._v(" 示例输出：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/5/29/16b04184d021165b",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"只列出处于监听状态的连接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#只列出处于监听状态的连接"}},[t._v("#")]),t._v(" 只列出处于监听状态的连接")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("netstat -l\n")])])]),s("p",[s("code",[t._v("-l")]),t._v(" 选项用来指定处于 LISTEN 状态的连接，也可以用"),s("code",[t._v("--listening")]),t._v(" 示例输出：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/5/29/16b0418533dc022b",alt:""}})]),t._v(" "),s("p",[t._v("与"),s("code",[t._v("-a")]),t._v("一样，可以组合"),s("code",[t._v("-t")]),t._v("来过滤处于 listen 状态的 TCP 连接")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("netstat -lt\n")])])]),s("p",[t._v("示例输出")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/5/29/16b0418538632d79",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"禁用端口-和-ip-映射"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#禁用端口-和-ip-映射"}},[t._v("#")]),t._v(" 禁用端口 和 IP 映射")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("netstat -ltn\n")])])]),s("p",[t._v("上面的例子中，常用端口都被映射为了名字，比如 22 端口输出显示为 ssh，8080 端口被映射为 webcache。大部分情况下，我们并不想 netstat 帮我们做这样的事情，可以加上"),s("code",[t._v("-n")]),t._v("禁用")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/5/29/16b04185f51f091f",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"显示进程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#显示进程"}},[t._v("#")]),t._v(" 显示进程")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("netstat -ltnp\n")])])]),s("p",[t._v("使用 "),s("code",[t._v("-p")]),t._v("命令可以显示连接归属的进程信息，在查看端口被哪个进程占用时非常有用 示例输出如下：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/5/29/16b04185b89d751d",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"显示所有的网卡信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#显示所有的网卡信息"}},[t._v("#")]),t._v(" 显示所有的网卡信息")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("netstat -i\n")])])]),s("p",[t._v("用 "),s("code",[t._v("-i")]),t._v(" 命令可以列出网卡信息，比如 MTU 等")]),t._v(" "),s("p",[t._v("示例输出")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/5/29/16b041861f153178",alt:""}})]),t._v(" "),s("p",[t._v("到此，netstat 基本命令选项都介绍完了，可以管道操作进行进一步的过滤。")]),t._v(" "),s("h3",{attrs:{id:"显示-8080-端口所有处于-established-状态的连接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#显示-8080-端口所有处于-established-状态的连接"}},[t._v("#")]),t._v(" 显示 8080 端口所有处于 ESTABLISHED 状态的连接")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v('netstat -atnp | grep ":8080" | grep ESTABLISHED\ntcp        0      0 10.211.55.10:8080       10.211.55.5:45438       ESTABLISHED 24972/nc\n')])])]),s("h3",{attrs:{id:"统计处于各个状态的连接个数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#统计处于各个状态的连接个数"}},[t._v("#")]),t._v(" 统计处于各个状态的连接个数")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("netstat -ant | awk '{print $6}' | sort | uniq -c | sort -n\n      1 established)\n      1 Foreign\n      2 LISTEN\n      3 TIME_WAIT\n     30 ESTABLISHED\n")])])]),s("p",[t._v("使用 awk 截取出状态行，然后用 sort、uniq 进行去重和计数即可")]),t._v(" "),s("h2",{attrs:{id:"小结与思考题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#小结与思考题"}},[t._v("#")]),t._v(" 小结与思考题")]),t._v(" "),s("p",[t._v("这篇文章我们首先讲解了 telnet 的妙用，来回顾一下重点：第一， telnet 可以检查指定端口是否存在，用来判断指定的网络连接是否可达。第二 telnet 可以用来发送 HTTP 请求，HTTP 是基于 TCP 的应用层协议，可以认为 telnet 是 TCP 包的一个构造工具，只要构造出的包符合 HTTP 协议的格式，就可以得到正确的返回。第三，介绍了如何用 telnet 访问 redis 服务器，在没有安装 redis-cli 的情况下，也可以通过 telnet 的方式来快速进行访问，然后结合实际场景介绍了 Redis 的通信协议 RESP。")]),t._v(" "),s("p",[t._v("然后介绍了 nc 在诸多类似场景下的应用，最后介绍了 netstat 命令的的用法。")]),t._v(" "),s("p",[t._v("留一道作业题：")]),t._v(" "),s("ul",[s("li",[t._v("怎么样用 nc 发送 UDP 数据")])]),t._v(" "),s("p",[t._v("欢迎你在留言区留言，和我一起讨论。")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://juejin.im/book/6844733788681928712/section/6844733788849700878",target:"_blank",rel:"noopener noreferrer"}},[t._v("Source"),s("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=v.exports}}]);